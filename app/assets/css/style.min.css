/*!
 * website
 * Fiercely quick and opinionated front-ends
 * 
 * @author Andr Zakhar
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{font-family:Titillium Web;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.btn{display:block;width:293px;height:70px;margin:0 auto;border-radius:5px;outline:0!important;border:none;border-bottom:5px solid #c63;background-color:#f63;text-transform:uppercase}.btn:hover{font-size:1.1em;cursor:pointer}.btn-welcome-color{color:#fff}@font-face{font-family:Titillium Web;font-style:normal;font-weight:400;src:url(../fonts/titillium-web-v6-latin-regular.eot);src:local("Titillium Web Regular"),local("TitilliumWeb-Regular"),url(../fonts/titillium-web-v6-latin-regular.eot?#iefix) format("embedded-opentype"),url(../fonts/titillium-web-v6-latin-regular.woff2) format("woff2"),url(../fonts/titillium-web-v6-latin-regular.woff) format("woff"),url(../fonts/titillium-web-v6-latin-regular.ttf) format("truetype"),url(../fonts/titillium-web-v6-latin-regular.svg#TitilliumWeb) format("svg")}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.l-welcome{background-color:#87509c;height:100vh;position:relative}.l-services,.l-welcome{min-height:450px;color:#fff}.l-services{padding:80px 0;background-color:#0c9}.clearfix:after{content:"";display:table;clear:both}@media only screen and (min-width:320px){.section-content--about,.section-content--portfolio,.section-content--services,.section-content--skills,.section-content--team{width:100%}.section-content .l-container{padding:0 5px;box-sizing:border-box}.contact-form__input-text--main{width:100%}}@media only screen and (min-width:520px){.section-content--skills{width:49%}.l-container{max-width:560px}}@media only screen and (min-width:768px){.section-content--portfolio,.section-content--services,.section-content--skills,.section-content--team{width:49%}.section-content--about{width:49.8%}.contact-form__input-text--main{width:47.7%}.l-container{max-width:760px}.navbar-checkbox{display:none}.navbar{position:relative;top:65px}.topnav{list-style-type:none;margin:0;padding:0;overflow:hidden;float:right}.topnav li{float:left}.topnav li a{display:block;color:#fff;text-align:center;padding:2px 16px;text-decoration:none;text-transform:uppercase;border-radius:3px}.topnav li a.active,.topnav li a:hover:not(.active){background-color:#636}}@media only screen and (min-width:1024px){.l-container{max-width:960px}.section-content--skills{width:24.7%}}@media only screen and (min-width:1140px){.section-content--services,.section-content--team{width:24.7%}}@media only screen and (min-width:1280px){.l-container{max-width:1140px}}@media only screen and (max-width:768px){.navbar{display:block;position:relative;top:50px;left:50px;z-index:1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.navbar a{text-decoration:none;color:#fff;transition:color .3s ease}.navbar a:hover{color:#bbbb}.navbar input{width:40px;height:32px;position:absolute;top:14px;left:-5px;cursor:pointer;opacity:0;z-index:2;-webkit-touch-callout:none}.navbar input,.navbar span{margin-left:80%;display:block}.navbar span{top:20px;width:33px;height:4px;margin-bottom:5px;position:relative;background:#fff;border-radius:3px;z-index:1;transform-origin:4px 0;transition:transform .5s cubic-bezier(.77,.2,.05,1),background .5s cubic-bezier(.77,.2,.05,1),opacity .55s ease}.navbar span:first-child{transform-origin:0 0}.navbar span:nth-last-child(2){transform-origin:0 100%}.navbar input:checked~span{opacity:1;transform:rotate(45deg) translate(-2px,-1px);background:#fff}.navbar input:checked~span:nth-last-child(3){opacity:0;transform:rotate(0deg) scale(.2)}.navbar input:checked~span:nth-last-child(2){transform:rotate(-45deg) translateY(-1px)}.topnav{position:absolute;width:300px;margin:-100px 0 0 -50px;padding:50px;padding-top:125px;background:#572a57;list-style-type:none;-webkit-font-smoothing:antialiased;transform-origin:0 0;transform:translate(-100%);transition:transform .5s cubic-bezier(.77,.2,.05,1)}.topnav li{padding:10px 0;font-size:22px}.navbar input:checked~ul{transform:none}}@media only screen and (max-width:870px){.footer{height:auto}.nav-social{top:0}.footer-nav{float:none;box-sizing:border-box;margin:0;padding:0}.footer-nav li{display:block;width:100%}.footer-nav li a{width:150px;margin:0 auto}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
